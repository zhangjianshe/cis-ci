name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Cache Node.js packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
      
    - name: Build application
      id: build_app
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        outputs: type=local,dest=/tmp/build
        build-args: |
          PULL_PASSWORD=${{ secrets.PULL_PASSWORD }}
       

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: /tmp/build
        
  build-and-push-cis-map:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: /tmp/build
        
    - name: Build and push cis-map
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: cis-map
        load: true
        push: true
        platforms: linux/amd64,linux/arm64  
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cis-map:${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/cis-map:latest
          
  build-and-push-cis-k8s:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: /tmp/build
        
    - name: Build and push cis-k8s
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: cis-k8s
        load: true
        push: true
        platforms: linux/amd64,linux/arm64  
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cis-k8s:${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/cis-k8s:latest
          
  build-and-push-cis-server:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: /tmp/build
        
    - name: Build and push cis-server
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: cis-server
        load: true
        push: true
        platforms: linux/amd64,linux/arm64  
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cis-server:${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/cis-server:latest